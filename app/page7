"use client"

import type React from "react"

import { useState, useEffect } from "react"
import Link from "next/link"
import Image from "next/image"
import { motion, useScroll, useTransform, useSpring, AnimatePresence } from "framer-motion"
import { CheckIcon, ChevronRightIcon, Building2, Sparkles, Zap, Target, Users, ArrowRight, Star, TrendingUp, Brain, Shield, Rocket, Globe, MessageCircle, BarChart3, Layers, Cpu, PlayCircle, Heart, Smile, Coffee, Briefcase, Network, UserCheck, Lightbulb, Award, Compass, Megaphone, Eye, Handshake } from "lucide-react"

import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Badge } from "@/components/ui/badge"
import { Input } from "@/components/ui/input"
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion"
import { WaitlistRealtime } from "@/components/waitlist-realtime"

// Clay-style elegant animated components
const FloatingShape = ({ children, className, delay = 0, amplitude = 8 }: { 
  children: React.ReactNode, 
  className?: string, 
  delay?: number,
  amplitude?: number 
}) => (
  <motion.div
    initial={{ y: 0, rotate: 0 }}
    animate={{ 
      y: [-amplitude, amplitude, -amplitude],
      rotate: [-3, 3, -3]
    }}
    transition={{ 
      duration: 8 + Math.random() * 2,
      delay,
      repeat: Infinity,
      ease: "easeInOut"
    }}
    className={className}
  >
    {children}
  </motion.div>
)

const PulsingOrb = ({ color, size = "w-3 h-3", delay = 0, className = "" }: { 
  color: string, 
  size?: string, 
  delay?: number,
  className?: string 
}) => (
  <motion.div
    initial={{ scale: 1, opacity: 0.6 }}
    animate={{ 
      scale: [1, 1.2, 1], 
      opacity: [0.6, 0.9, 0.6]
    }}
    transition={{ duration: 3, delay, repeat: Infinity }}
    className={`${size} ${color} rounded-full ${className}`}
  />
)

// Referral Network Visualization
const NetworkNode = ({ size = "w-4 h-4", color = "bg-blue-500", delay = 0, connections = [] }: {
  size?: string,
  color?: string,
  delay?: number,
  connections?: number[]
}) => (
  <motion.div
    initial={{ scale: 0, opacity: 0 }}
    animate={{ scale: 1, opacity: 1 }}
    transition={{ duration: 0.5, delay }}
    className="relative"
  >
    <motion.div
      animate={{ scale: [1, 1.1, 1] }}
      transition={{ duration: 2, delay, repeat: Infinity }}
      className={`${size} ${color} rounded-full shadow-lg`}
    />
    {/* Connection lines */}
    {connections.map((angle, i) => (
      <motion.div
        key={i}
        className="absolute w-8 h-px bg-gradient-to-r from-blue-400 to-transparent"
        style={{
          top: '50%',
          left: '50%',
          transformOrigin: '0 50%',
          rotate: `${angle}deg`
        }}
        initial={{ scaleX: 0 }}
        animate={{ scaleX: 1 }}
        transition={{ duration: 1, delay: delay + 0.5 + i * 0.2 }}
      />
    ))}
  </motion.div>
)

// Organic Plant-like Element for Referrals
const ReferralBranch = ({ className = "" }: { className?: string }) => (
  <motion.svg
    className={`w-24 h-24 text-green-400 opacity-20 ${className}`}
    viewBox="0 0 100 100"
    initial={{ pathLength: 0, opacity: 0 }}
    animate={{ pathLength: 1, opacity: 0.2 }}
    transition={{ duration: 2, ease: "easeInOut" }}
  >
    <motion.path
      d="M20,80 Q30,60 40,50 Q50,40 60,30 Q70,20 80,10"
      stroke="currentColor"
      strokeWidth="2"
      fill="none"
      strokeLinecap="round"
    />
    <motion.circle cx="40" cy="50" r="3" fill="currentColor" />
    <motion.circle cx="60" cy="30" r="2" fill="currentColor" />
    <motion.path
      d="M40,50 Q35,45 30,40"
      stroke="currentColor"
      strokeWidth="1.5"
      fill="none"
      strokeLinecap="round"
    />
    <motion.path
      d="M60,30 Q65,25 70,20"
      stroke="currentColor"
      strokeWidth="1.5"
      fill="none"
      strokeLinecap="round"
    />
  </motion.svg>
)

// Connection Flower - Referral themed
const ConnectionFlower = ({ className = "" }: { className?: string }) => (
  <motion.svg
    className={`w-16 h-16 text-purple-400 opacity-30 ${className}`}
    viewBox="0 0 60 60"
    initial={{ scale: 0, rotate: -180 }}
    animate={{ scale: 1, rotate: 0 }}
    transition={{ duration: 1, ease: "easeOut" }}
  >
    {/* Petals representing connections */}
    {[0, 60, 120, 180, 240, 300].map((rotation, i) => (
      <motion.ellipse
        key={i}
        cx="30"
        cy="15"
        rx="4"
        ry="12"
        fill="currentColor"
        style={{ transformOrigin: '30px 30px' }}
        initial={{ rotate: rotation, scale: 0 }}
        animate={{ rotate: rotation, scale: 1 }}
        transition={{ duration: 0.5, delay: i * 0.1 }}
      />
    ))}
    {/* Center node */}
    <motion.circle
      cx="30"
      cy="30"
      r="4"
      fill="currentColor"
      initial={{ scale: 0 }}
      animate={{ scale: 1 }}
      transition={{ duration: 0.3, delay: 0.6 }}
    />
  </motion.svg>
)

// Clay-style 3D Card Component
const Clay3DCard = ({ children, className = "", hoverScale = 1.02 }: {
  children: React.ReactNode,
  className?: string,
  hoverScale?: number
}) => (
  <motion.div
    whileHover={{ 
      scale: hoverScale, 
      y: -4,
      boxShadow: "0 20px 40px rgba(0,0,0,0.1)"
    }}
    whileTap={{ scale: 0.98 }}
    transition={{ type: "spring", stiffness: 300, damping: 20 }}
    className={`transform-gpu ${className}`}
  >
    {children}
  </motion.div>
)

// Animated Counter
const AnimatedCounter = ({ end, duration = 2, prefix = "", suffix = "" }: {
  end: number,
  duration?: number,
  prefix?: string,
  suffix?: string
}) => {
  const [count, setCount] = useState(0)

  useEffect(() => {
    let startTime: number
    let animationFrame: number

    const animate = (timestamp: number) => {
      if (!startTime) startTime = timestamp
      const progress = Math.min((timestamp - startTime) / (duration * 1000), 1)
      
      setCount(Math.floor(progress * end))
      
      if (progress < 1) {
        animationFrame = requestAnimationFrame(animate)
      }
    }

    animationFrame = requestAnimationFrame(animate)
    return () => cancelAnimationFrame(animationFrame)
  }, [end, duration])

  return <span>{prefix}{count.toLocaleString()}{suffix}</span>
}

export default function LandingPage() {
  const [email, setEmail] = useState("")
  const [isSubmitting, setIsSubmitting] = useState(false)
  const [waitlistPosition, setWaitlistPosition] = useState<number | null>(null)

  const { scrollYProgress } = useScroll()
  const yTransform = useTransform(scrollYProgress, [0, 1], [0, -50])

  const handleWaitlistSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    if (!email) return

    setIsSubmitting(true)
    await new Promise((resolve) => setTimeout(resolve, 1500))
    setWaitlistPosition(Math.floor(Math.random() * 1000) + 1)
    setIsSubmitting(false)
  }

  return (
    <div className="flex flex-col min-h-screen bg-white overflow-x-hidden">
      {/* Clay-style Navigation */}
      <motion.header 
        initial={{ y: -100 }}
        animate={{ y: 0 }}
        transition={{ duration: 0.6, ease: "easeOut" }}
        className="sticky top-0 z-50 w-full bg-white/90 backdrop-blur-xl border-b border-gray-100"
      >
        <div className="container mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex h-16 items-center justify-between">
            <div className="flex items-center gap-2">
              <Link href="/" className="flex items-center space-x-3">
                <div className="relative">
                  <motion.div 
                    whileHover={{ rotate: 360 }}
                    transition={{ duration: 0.5 }}
                    className="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl flex items-center justify-center shadow-sm"
                  >
                    <Building2 className="h-4 w-4 text-white" />
                  </motion.div>
                  <PulsingOrb color="bg-green-400" size="w-2 h-2" delay={0} className="absolute -top-1 -right-1" />
                </div>
                <span className="text-xl font-semibold text-gray-900">ReferralInc</span>
                <Badge className="bg-gradient-to-r from-blue-50 to-purple-50 text-blue-700 border-blue-200 text-xs px-2 py-1">
                  Beta
                </Badge>
              </Link>
            </div>

            <nav className="hidden md:flex items-center space-x-8">
              {["Features", "How it works", "Pricing"].map((item, index) => (
                <motion.div
                  key={item}
                  whileHover={{ y: -1 }}
                >
                  <Link 
                    href={`#${item.toLowerCase().replace(" ", "-")}`} 
                    className="text-sm font-medium text-gray-600 hover:text-gray-900 transition-colors"
                  >
                    {item}
                  </Link>
                </motion.div>
              ))}
            </nav>

            <div className="flex items-center gap-3">
              <Link href="/auth/login">
                <Button variant="ghost" className="text-sm font-medium">
                  Log in
                </Button>
              </Link>
              <Link href="/auth/register">
                <Clay3DCard>
                  <Button className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white text-sm px-4 py-2 rounded-full">
                    Get started
                  </Button>
                </Clay3DCard>
              </Link>
            </div>
          </div>
        </div>
      </motion.header>

      <main className="flex-1">
        {/* Hero Section - Clay Style */}
        <section className="relative pt-16 pb-24 sm:pt-24 sm:pb-32 overflow-hidden">
          {/* Background Elements */}
          <div className="absolute inset-0 overflow-hidden">
            {/* Organic shapes */}
            <FloatingShape className="absolute top-20 left-10" delay={0}>
              <div className="w-32 h-32 bg-gradient-to-br from-blue-100 to-purple-100 rounded-full opacity-60" />
            </FloatingShape>
            <FloatingShape className="absolute top-40 right-20" delay={1}>
              <div className="w-24 h-24 bg-gradient-to-br from-green-100 to-emerald-100 rounded-2xl opacity-60 rotate-45" />
            </FloatingShape>
            <FloatingShape className="absolute bottom-40 left-20" delay={2}>
              <div className="w-28 h-28 bg-gradient-to-br from-pink-100 to-rose-100 rounded-full opacity-60" />
            </FloatingShape>
            
            {/* Referral-themed organic elements */}
            <ReferralBranch className="absolute top-32 right-32" />
            <ConnectionFlower className="absolute bottom-32 right-16" />
            <ReferralBranch className="absolute top-1/2 left-16 rotate-45" />
          </div>

          <div className="container mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
            <div className="max-w-4xl mx-auto text-center">
              {/* Badge */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6 }}
                className="mb-8"
              >
                <div className="inline-flex items-center gap-2 bg-gradient-to-r from-blue-50 to-purple-50 border border-blue-200 rounded-full px-4 py-2">
                  <motion.div
                    animate={{ rotate: [0, 360] }}
                    transition={{ duration: 4, repeat: Infinity }}
                  >
                    <Sparkles className="w-4 h-4 text-blue-600" />
                  </motion.div>
                  <span className="text-blue-700 font-medium text-sm">AI-powered referral platform</span>
                  <PulsingOrb color="bg-green-400" size="w-2 h-2" />
                </div>
              </motion.div>

              {/* Main Headline - Clay style typography */}
              <motion.h1
                initial={{ opacity: 0, y: 30 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8, delay: 0.2 }}
                className="text-4xl sm:text-5xl lg:text-6xl font-bold tracking-tight text-gray-900 mb-6 leading-tight"
              >
                Turn connections into{" "}
                <span className="bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 bg-clip-text text-transparent">
                  career opportunities
                </span>
              </motion.h1>

              {/* Subtitle */}
              <motion.p
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8, delay: 0.4 }}
                className="text-xl text-gray-600 mb-10 max-w-3xl mx-auto leading-relaxed"
              >
                Access verified employee networks and AI-powered matching. Build meaningful relationships that lead to your dream job.
              </motion.p>

              {/* CTA Buttons */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                animate={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.8, delay: 0.6 }}
                className="flex flex-col sm:flex-row gap-4 justify-center mb-12"
              >
                <Clay3DCard>
                  <Button
                    size="lg"
                    className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white px-8 py-3 text-base font-semibold rounded-full shadow-lg"
                  >
                    Start building for free
                  </Button>
                </Clay3DCard>
                <Clay3DCard>
                  <Button
                    size="lg"
                    variant="outline"
                    className="border-gray-300 text-gray-700 hover:bg-gray-50 px-8 py-3 text-base font-semibold rounded-full"
                  >
                    <PlayCircle className="w-4 h-4 mr-2" />
                    Watch demo
                  </Button>
                </Clay3DCard>
              </motion.div>

              {/* Network Visualization */}
              <motion.div
                initial={{ opacity: 0, scale: 0.8 }}
                animate={{ opacity: 1, scale: 1 }}
                transition={{ duration: 1, delay: 0.8 }}
                className="relative max-w-2xl mx-auto"
              >
                <div className="bg-gradient-to-br from-gray-50 to-white rounded-3xl p-8 shadow-xl border border-gray-100">
                  <div className="flex items-center justify-center mb-6">
                    <motion.div
                      animate={{ rotate: [0, 360] }}
                      transition={{ duration: 10, repeat: Infinity, ease: "linear" }}
                      className="w-16 h-16 bg-gradient-to-r from-blue-500 to-purple-600 rounded-2xl flex items-center justify-center shadow-lg"
                    >
                      <Network className="w-8 h-8 text-white" />
                    </motion.div>
                  </div>
                  
                  <h3 className="text-lg font-semibold text-gray-900 mb-2">AI Referral Network</h3>
                  <p className="text-gray-600 mb-6">Connect with the right people at the right time</p>
                  
                  {/* Network nodes */}
                  <div className="relative h-24 flex items-center justify-center">
                    <NetworkNode 
                      size="w-3 h-3" 
                      color="bg-blue-500" 
                      delay={0} 
                      connections={[0, 45, 90]} 
                    />
                    <NetworkNode 
                      size="w-4 h-4" 
                      color="bg-purple-500" 
                      delay={0.5} 
                      connections={[135, 180, 225]} 
                    />
                    <NetworkNode 
                      size="w-3 h-3" 
                      color="bg-green-500" 
                      delay={1} 
                      connections={[270, 315]} 
                    />
                  </div>
                </div>
              </motion.div>
            </div>
          </div>
        </section>

        {/* Features Section - Clay Bento Style */}
        <section id="features" className="py-20 bg-gradient-to-b from-gray-50 to-white">
          <div className="container mx-auto px-4 sm:px-6 lg:px-8">
            <div className="text-center mb-16">
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6 }}
                viewport={{ once: true }}
              >
                <h2 className="text-3xl sm:text-4xl font-bold text-gray-900 mb-4">
                  Everything you need to get referred
                </h2>
                <p className="text-lg text-gray-600 max-w-2xl mx-auto">
                  Powerful features designed to maximize your referral success
                </p>
              </motion.div>
            </div>

            {/* Bento Grid */}
            <div className="max-w-6xl mx-auto grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
              
              {/* Large Feature Card */}
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6 }}
                viewport={{ once: true }}
                className="lg:col-span-2 lg:row-span-2"
              >
                <Clay3DCard className="h-full">
                  <div className="relative overflow-hidden bg-gradient-to-br from-blue-500 to-purple-600 rounded-3xl p-8 text-white h-full">
                    {/* Background Elements */}
                    <ReferralBranch className="absolute top-4 right-4 text-white opacity-10" />
                    <ConnectionFlower className="absolute bottom-4 left-4 text-white opacity-10" />

                    <div className="relative z-10 h-full flex flex-col">
                      <div className="flex items-center mb-6">
                        <motion.div 
                          whileHover={{ rotate: 360 }}
                          transition={{ duration: 0.5 }}
                          className="w-12 h-12 bg-white/20 backdrop-blur-sm rounded-xl flex items-center justify-center mr-4"
                        >
                          <Brain className="w-6 h-6 text-white" />
                        </motion.div>
                        <div>
                          <h3 className="text-xl font-semibold mb-1">AI-powered matching</h3>
                          <p className="text-white/80 text-sm">Smart connections that work</p>
                        </div>
                      </div>
                      
                      <p className="text-base text-white/90 mb-8 leading-relaxed flex-grow">
                        Our AI analyzes thousands of successful referrals to understand what makes connections work. Get matched with employees who are most likely to provide valuable referrals.
                      </p>
                      
                      {/* Interactive Visual */}
                      <div className="relative bg-white/10 backdrop-blur-sm rounded-2xl p-6 h-32">
                        <div className="flex items-center justify-center h-full">
                          <motion.div
                            animate={{ rotate: 360 }}
                            transition={{ duration: 8, repeat: Infinity, ease: "linear" }}
                            className="relative"
                          >
                            <div className="w-16 h-16 border-2 border-white/40 rounded-full flex items-center justify-center">
                              <Cpu className="w-8 h-8 text-white" />
                            </div>
                            {/* Orbiting Elements */}
                            {[0, 120, 240].map((angle, i) => (
                              <motion.div
                                key={i}
                                className="absolute w-3 h-3 bg-white rounded-full"
                                style={{
                                  top: '50%',
                                  left: '50%',
                                  transformOrigin: '0 0',
                                }}
                                animate={{
                                  rotate: angle,
                                  x: 30 * Math.cos((angle * Math.PI) / 180),
                                  y: 30 * Math.sin((angle * Math.PI) / 180),
                                }}
                                transition={{ duration: 0 }}
                              />
                            ))}
                          </motion.div>
                        </div>
                      </div>
                    </div>
                  </div>
                </Clay3DCard>
              </motion.div>

              {/* Feature Cards */}
              {[
                {
                  icon: Shield,
                  title: "Verified profiles",
                  description: "Connect only with authenticated employees from real companies.",
                  gradient: "from-green-400 to-emerald-500",
                  bgGradient: "from-green-50 to-emerald-50"
                },
                {
                  icon: MessageCircle,
                  title: "Direct messaging",
                  description: "Start conversations with verified employees at your target companies.",
                  gradient: "from-blue-400 to-cyan-500",
                  bgGradient: "from-blue-50 to-cyan-50"
                },
                {
                  icon: BarChart3,
                  title: "Success tracking",
                  description: "Monitor your referral pipeline and optimize your approach.",
                  gradient: "from-orange-400 to-red-500",
                  bgGradient: "from-orange-50 to-red-50"
                },
                {
                  icon: TrendingUp,
                  title: "Performance insights",
                  description: "Get data-driven recommendations to improve your success rate.",
                  gradient: "from-purple-400 to-pink-500",
                  bgGradient: "from-purple-50 to-pink-50"
                }
              ].map((feature, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                >
                  <Clay3DCard className="h-full">
                    <div className={`relative overflow-hidden bg-gradient-to-br ${feature.bgGradient} rounded-3xl p-6 border border-white/50 shadow-lg h-full`}>
                      {/* Background Elements */}
                      <FloatingShape className="absolute -top-2 -right-2" delay={index * 0.5}>
                        <div className={`w-6 h-6 bg-gradient-to-r ${feature.gradient} rounded-full opacity-20`} />
                      </FloatingShape>

                      <div className="relative z-10 h-full flex flex-col">
                        <motion.div 
                          whileHover={{ rotate: 360 }}
                          transition={{ duration: 0.5 }}
                          className={`w-12 h-12 mb-4 bg-gradient-to-r ${feature.gradient} rounded-xl flex items-center justify-center shadow-lg`}
                        >
                          <feature.icon className="w-6 h-6 text-white" />
                        </motion.div>
                        <h3 className="text-base font-semibold text-gray-900 mb-3">{feature.title}</h3>
                        <p className="text-gray-600 text-sm leading-relaxed flex-grow">{feature.description}</p>
                      </div>
                    </div>
                  </Clay3DCard>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Epic Waitlist CTA */}
        <section className="relative py-32 overflow-hidden">
          <div className="absolute inset-0 bg-gradient-to-br from-blue-600 via-purple-600 to-pink-600" />
          
          {/* Background Graphics */}
          <div className="absolute inset-0">
            <FloatingShape className="absolute top-10 left-10" delay={0}>
              <div className="w-32 h-32 bg-white/10 rounded-full backdrop-blur-sm" />
            </FloatingShape>
            <FloatingShape className="absolute bottom-10 right-10" delay={1}>
              <div className="w-24 h-24 bg-white/10 rounded-2xl rotate-45 backdrop-blur-sm" />
            </FloatingShape>
            <FloatingShape className="absolute top-1/2 left-1/4" delay={2}>
              <div className="w-16 h-16 bg-white/10 rounded-lg backdrop-blur-sm" />
            </FloatingShape>
          </div>
          
          <div className="relative z-10 max-w-5xl mx-auto px-4">
            <motion.div
              initial={{ opacity: 0, scale: 0.8 }}
              whileInView={{ opacity: 1, scale: 1 }}
              transition={{ duration: 1 }}
              viewport={{ once: true }}
              className="text-center text-white"
            >
              <motion.div
                animate={{ rotate: [0, 360] }}
                transition={{ duration: 8, repeat: Infinity, ease: "linear" }}
                className="w-24 h-24 mx-auto mb-8 bg-white/20 backdrop-blur-sm rounded-3xl flex items-center justify-center shadow-2xl"
              >
                <Sparkles className="w-12 h-12 text-white" />
              </motion.div>
              
              <h2 className="text-5xl md:text-7xl font-black mb-6 leading-tight">
                <motion.span 
                  className="bg-gradient-to-r from-white to-cyan-200 bg-clip-text text-transparent"
                  animate={{ backgroundPosition: ["0%", "100%", "0%"] }}
                  transition={{ duration: 3, repeat: Infinity }}
                >
                  JOIN THE REVOLUTION
                </motion.span>
              </h2>
              
              <p className="text-xl text-white/90 mb-12 max-w-3xl mx-auto leading-relaxed">
                Be among the first to experience the future of AI-powered referrals. 
                Limited beta spots available for visionaries only.
              </p>

              {!waitlistPosition ? (
                <div className="max-w-md mx-auto">
                  <form onSubmit={handleWaitlistSubmit} className="space-y-6">
                    <motion.div
                      whileFocus={{ scale: 1.02 }}
                      className="relative"
                    >
                      <Input
                        type="email"
                        placeholder="Enter your email to join the revolution"
                        value={email}
                        onChange={(e) => setEmail(e.target.value)}
                        className="h-16 text-center text-lg bg-white/20 backdrop-blur-xl border-white/30 text-white placeholder-white/70 rounded-2xl shadow-xl"
                        required
                      />
                      <motion.div
                        className="absolute inset-0 bg-gradient-to-r from-cyan-500/20 to-pink-500/20 rounded-2xl opacity-0 group-focus-within:opacity-100 transition-opacity pointer-events-none"
                      />
                    </motion.div>
                    
                    <Clay3DCard>
                      <Button
                        type="submit"
                        size="lg"
                        disabled={isSubmitting}
                        className="w-full bg-white text-purple-600 hover:bg-gray-100 h-16 text-xl font-bold rounded-2xl transition-all duration-300 shadow-2xl group"
                      >
                        {isSubmitting ? (
                          <div className="flex items-center gap-3">
                            <motion.div
                              animate={{ rotate: 360 }}
                              transition={{ duration: 1, repeat: Infinity, ease: "linear" }}
                              className="w-6 h-6 border-2 border-purple-600 border-t-transparent rounded-full"
                            />
                            Joining Revolution...
                          </div>
                        ) : (
                          <div className="flex items-center gap-3">
                            <motion.div
                              animate={{ rotate: [0, 360] }}
                              transition={{ duration: 2, repeat: Infinity }}
                            >
                              <Rocket className="w-6 h-6" />
                            </motion.div>
                            Join Beta Revolution
                            <motion.div
                              animate={{ x: [0, 5, 0] }}
                              transition={{ duration: 1.5, repeat: Infinity }}
                            >
                              <ArrowRight className="w-6 h-6" />
                            </motion.div>
                          </div>
                        )}
                      </Button>
                    </Clay3DCard>
                  </form>
                  
                  <motion.p 
                    className="text-sm text-white/70 mt-6"
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    transition={{ delay: 1 }}
                  >
                    🚀 No credit card required • ⚡ Instant access • 🎯 Limited spots
                  </motion.p>
                </div>
              ) : (
                <motion.div
                  initial={{ opacity: 0, scale: 0.8 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.8 }}
                >
                  <WaitlistRealtime userPosition={waitlistPosition} />
                </motion.div>
              )}
            </motion.div>
          </div>
        </section>

        {/* How It Works - Clay Style */}
        <section id="how-it-works" className="py-20 bg-white relative overflow-hidden">
          {/* Background Graphics */}
          <div className="absolute inset-0">
            <FloatingShape className="absolute top-20 left-10" delay={0}>
              <div className="w-24 h-24 bg-gradient-to-br from-purple-100 to-pink-100 rounded-full opacity-40" />
            </FloatingShape>
            <FloatingShape className="absolute bottom-20 right-10" delay={2}>
              <div className="w-20 h-20 bg-gradient-to-br from-blue-100 to-cyan-100 rounded-2xl opacity-40 rotate-45" />
            </FloatingShape>
            <ReferralBranch className="absolute top-1/3 right-1/4 text-green-300" />
            <ConnectionFlower className="absolute bottom-1/3 left-1/4 text-purple-300" />
          </div>

          <div className="container mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
            <div className="text-center mb-16">
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6 }}
                viewport={{ once: true }}
              >
                <h2 className="text-3xl sm:text-4xl font-bold text-gray-900 mb-4">
                  Turn connections into opportunities
                </h2>
                <p className="text-lg text-gray-600 max-w-2xl mx-auto">
                  Three simple steps to accelerate your career through strategic referrals
                </p>
              </motion.div>
            </div>

            <div className="max-w-5xl mx-auto">
              <div className="grid lg:grid-cols-3 gap-8">
                {[
                  {
                    number: "01",
                    title: "Create your profile",
                    description: "Build a comprehensive profile highlighting your skills, experience, and career goals. Our AI analyzes your background to identify the best opportunities.",
                    icon: Users,
                    gradient: "from-blue-400 to-cyan-500",
                    bgColor: "from-blue-50 to-cyan-50"
                  },
                  {
                    number: "02",
                    title: "Get matched with employees",
                    description: "Our intelligent system connects you with verified employees at your target companies. Find the right people who can provide valuable insights.",
                    icon: Zap,
                    gradient: "from-purple-400 to-pink-500",
                    bgColor: "from-purple-50 to-pink-50"
                  },
                  {
                    number: "03",
                    title: "Secure referrals",
                    description: "Build meaningful relationships through structured conversations. Get personalized advice and secure referrals that lead to interviews.",
                    icon: Target,
                    gradient: "from-green-400 to-emerald-500",
                    bgColor: "from-green-50 to-emerald-50"
                  }
                ].map((step, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 30 }}
                    whileInView={{ opacity: 1, y: 0 }}
                    transition={{ duration: 0.6, delay: index * 0.2 }}
                    viewport={{ once: true }}
                    className="relative"
                  >
                    <Clay3DCard>
                      <div className={`relative bg-gradient-to-br ${step.bgColor} border border-white/50 rounded-3xl p-8 shadow-lg overflow-hidden`}>
                        {/* Background Graphics */}
                        <FloatingShape className="absolute -top-2 -right-2" delay={index}>
                          <div className={`w-12 h-12 bg-gradient-to-r ${step.gradient} rounded-2xl opacity-15`} />
                        </FloatingShape>

                        {/* Step Number Badge */}
                        <div className="flex items-center mb-6">
                          <motion.div 
                            whileHover={{ scale: 1.1 }}
                            className={`w-10 h-10 bg-gradient-to-r ${step.gradient} text-white rounded-xl flex items-center justify-center text-sm font-bold mr-4 shadow-lg`}
                          >
                            {step.number}
                          </motion.div>
                          <motion.div 
                            whileHover={{ rotate: 360 }}
                            transition={{ duration: 0.5 }}
                            className={`w-12 h-12 bg-gradient-to-r ${step.gradient} rounded-xl flex items-center justify-center shadow-lg`}
                          >
                            <step.icon className="w-6 h-6 text-white" />
                          </motion.div>
                        </div>

                        <h3 className="text-lg font-semibold text-gray-900 mb-4">{step.title}</h3>
                        <p className="text-gray-600 leading-relaxed text-sm">{step.description}</p>
                      </div>
                    </Clay3DCard>
                  </motion.div>
                ))}
              </div>
            </div>
          </div>
        </section>

        {/* Pricing - Clay Style */}
        <section id="pricing" className="py-20 bg-gradient-to-b from-gray-50 to-white">
          <div className="container mx-auto px-4 sm:px-6 lg:px-8">
            <div className="text-center mb-16">
              <motion.div
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                transition={{ duration: 0.6 }}
                viewport={{ once: true }}
              >
                <h2 className="text-3xl sm:text-4xl font-bold text-gray-900 mb-4">
                  Simple, transparent pricing
                </h2>
                <p className="text-lg text-gray-600 max-w-2xl mx-auto">
                  Start for free, scale as you grow
                </p>
              </motion.div>
            </div>

            <div className="max-w-4xl mx-auto grid md:grid-cols-2 gap-8">
              {[
                {
                  name: "Free",
                  price: "$0",
                  period: "",
                  description: "Perfect for getting started",
                  features: [
                    "Create your profile",
                    "Browse employee network",
                    "Basic AI matching",
                    "5 connections per month",
                    "Community support"
                  ],
                  cta: "Get started",
                  popular: false,
                  gradient: "from-blue-400 to-cyan-500",
                  bgGradient: "from-blue-50 to-cyan-50"
                },
                {
                  name: "Pro",
                  price: "$19",
                  period: "/month",
                  description: "For serious job seekers",
                  features: [
                    "Everything in Free",
                    "Unlimited connections",
                    "Advanced AI insights",
                    "Direct messaging",
                    "Priority support",
                    "Success analytics"
                  ],
                  cta: "Start free trial",
                  popular: true,
                  gradient: "from-purple-400 to-pink-500",
                  bgGradient: "from-purple-50 to-pink-50"
                }
              ].map((plan, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 20 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: index * 0.1 }}
                  viewport={{ once: true }}
                  className="relative"
                >
                  <Clay3DCard>
                    <div className={`relative overflow-hidden rounded-3xl p-8 shadow-lg border ${
                      plan.popular 
                        ? `bg-gradient-to-br ${plan.bgGradient} border-purple-200 ring-2 ring-purple-300` 
                        : 'bg-white border-gray-200'
                    }`}>
                      {/* Background Graphics */}
                      {plan.popular && (
                        <>
                          <FloatingShape className="absolute -top-2 -right-2" delay={0}>
                            <div className={`w-12 h-12 bg-gradient-to-r ${plan.gradient} rounded-2xl opacity-15`} />
                          </FloatingShape>
                          <div className="absolute -top-3 left-1/2 transform -translate-x-1/2">
                            <motion.div
                              animate={{ rotate: [0, 360] }}
                              transition={{ duration: 10, repeat: Infinity }}
                              className={`bg-gradient-to-r ${plan.gradient} text-white px-3 py-1 rounded-full text-xs font-bold shadow-lg`}
                            >
                              ⭐ Most popular
                            </motion.div>
                          </div>
                        </>
                      )}
                      
                      <div className="relative z-10">
                        <div className="mb-8">
                          <h3 className="text-lg font-semibold text-gray-900 mb-2">{plan.name}</h3>
                          <p className="text-gray-600 mb-4 text-sm">{plan.description}</p>
                          <div className="flex items-baseline">
                            <span className="text-3xl font-bold text-gray-900">{plan.price}</span>
                            <span className="text-gray-600 ml-1 text-sm">{plan.period}</span>
                          </div>
                        </div>

                        <ul className="space-y-3 mb-8">
                          {plan.features.map((feature, i) => (
                            <li key={i} className="flex items-center text-sm">
                              <motion.div
                                whileHover={{ scale: 1.2 }}
                                className={`w-4 h-4 bg-gradient-to-r ${plan.gradient} rounded-full flex items-center justify-center mr-3 flex-shrink-0`}
                              >
                                <CheckIcon className="w-2.5 h-2.5 text-white" />
                              </motion.div>
                              <span className="text-gray-700">{feature}</span>
                            </li>
                          ))}
                        </ul>

                        <Clay3DCard>
                          <Button
                            className={`w-full rounded-full py-3 font-semibold text-sm ${
                              plan.popular
                                ? `bg-gradient-to-r ${plan.gradient} hover:opacity-90 text-white shadow-lg`
                                : 'bg-gray-900 hover:bg-gray-800 text-white'
                            }`}
                          >
                            {plan.cta}
                          </Button>
                        </Clay3DCard>
                      </div>
                    </div>
                  </Clay3DCard>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* CTA Section - Clay Style */}
        <section className="py-20 bg-gradient-to-br from-blue-600 via-purple-600 to-pink-600 relative overflow-hidden">
          {/* Background Graphics */}
          <div className="absolute inset-0">
            <FloatingShape className="absolute top-10 left-10" delay={0}>
              <div className="w-16 h-16 bg-white/10 rounded-full" />
            </FloatingShape>
            <FloatingShape className="absolute bottom-10 right-10" delay={1}>
              <div className="w-12 h-12 bg-white/10 rounded-2xl rotate-45" />
            </FloatingShape>
            <FloatingShape className="absolute top-1/2 left-1/4" delay={2}>
              <div className="w-8 h-8 bg-white/10 rounded-lg" />
            </FloatingShape>
            <ReferralBranch className="absolute top-16 right-16 text-white opacity-10" />
            <ConnectionFlower className="absolute bottom-16 left-16 text-white opacity-10" />
          </div>

          <div className="container mx-auto px-4 sm:px-6 lg:px-8 relative z-10">
            <motion.div
              initial={{ opacity: 0, y: 20 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.6 }}
              viewport={{ once: true }}
              className="max-w-3xl mx-auto text-center text-white"
            >
              <motion.div
                animate={{ rotate: [0, 360] }}
                transition={{ duration: 8, repeat: Infinity, ease: "linear" }}
                className="w-16 h-16 bg-white/20 backdrop-blur-sm rounded-2xl flex items-center justify-center mx-auto mb-8"
              >
                <Rocket className="w-8 h-8 text-white" />
              </motion.div>
              
              <h2 className="text-3xl sm:text-4xl font-bold mb-4">
                Ready to accelerate your career?
              </h2>
              <p className="text-lg text-white/90 mb-8 max-w-2xl mx-auto">
                Join the beta and start building meaningful connections that lead to your dream job.
              </p>

              {!waitlistPosition ? (
                <div className="max-w-md mx-auto">
                  <form onSubmit={handleWaitlistSubmit} className="space-y-4">
                    <Input
                      type="email"
                      placeholder="Enter your email"
                      value={email}
                      onChange={(e) => setEmail(e.target.value)}
                      className="h-12 text-center text-base bg-white/20 backdrop-blur-sm border-white/30 text-white placeholder-white/70 rounded-full"
                      required
                    />
                    <Clay3DCard>
                      <Button
                        type="submit"
                        size="lg"
                        className="w-full bg-white text-purple-600 hover:bg-gray-100 h-12 text-base font-semibold rounded-full shadow-lg"
                        disabled={isSubmitting}
                      >
                        {isSubmitting ? "Joining..." : "Start building for free"}
                      </Button>
                    </Clay3DCard>
                  </form>
                  <p className="text-sm text-white/70 mt-4">No credit card required</p>
                </div>
              ) : (
                <motion.div
                  initial={{ opacity: 0, scale: 0.9 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.5 }}
                >
                  <WaitlistRealtime userPosition={waitlistPosition} />
                </motion.div>
              )}
            </motion.div>
          </div>
        </section>
      </main>

      {/* Footer - Clean & Minimal */}
      <footer className="bg-white border-t border-gray-200 py-16">
        <div className="container mx-auto px-4 sm:px-6 lg:px-8">
          <div className="grid grid-cols-2 md:grid-cols-4 gap-8 mb-8">
            <div className="col-span-2">
              <div className="flex items-center gap-3 mb-4">
                <motion.div 
                  whileHover={{ rotate: 360 }}
                  transition={{ duration: 0.5 }}
                  className="w-8 h-8 bg-gradient-to-r from-blue-500 to-purple-600 rounded-xl flex items-center justify-center"
                >
                  <Building2 className="h-4 w-4 text-white" />
                </motion.div>
                <span className="text-lg font-semibold text-gray-900">ReferralInc</span>
                <Badge className="bg-gradient-to-r from-blue-50 to-purple-50 text-blue-700 border-blue-200 text-xs px-2 py-1">
                  Beta
                </Badge>
              </div>
              <p className="text-gray-600 mb-4 max-w-sm text-sm">
                The AI-powered platform for career acceleration through strategic referrals.
              </p>
            </div>
            
            <div>
              <h3 className="font-semibold text-gray-900 mb-4 text-sm">Product</h3>
              <ul className="space-y-3">
                <li><Link href="#features" className="text-gray-600 hover:text-gray-900 transition-colors text-sm">Features</Link></li>
                <li><Link href="#pricing" className="text-gray-600 hover:text-gray-900 transition-colors text-sm">Pricing</Link></li>
                <li><Link href="#" className="text-gray-600 hover:text-gray-900 transition-colors text-sm">Beta program</Link></li>
              </ul>
            </div>
            
            <div>
              <h3 className="font-semibold text-gray-900 mb-4 text-sm">Company</h3>
              <ul className="space-y-3">
                <li><Link href="#" className="text-gray-600 hover:text-gray-900 transition-colors text-sm">About</Link></li>
                <li><Link href="#" className="text-gray-600 hover:text-gray-900 transition-colors text-sm">Blog</Link></li>
                <li><Link href="#" className="text-gray-600 hover:text-gray-900 transition-colors text-sm">Careers</Link></li>
              </ul>
            </div>
          </div>
          
          <div className="border-t border-gray-200 pt-8 flex flex-col md:flex-row justify-between items-center">
            <p className="text-gray-600 text-sm">© 2024 ReferralInc. All rights reserved.</p>
            <div className="flex gap-6 mt-4 md:mt-0">
              <Link href="#" className="text-gray-600 hover:text-gray-900 transition-colors text-sm">Privacy</Link>
              <Link href="#" className="text-gray-600 hover:text-gray-900 transition-colors text-sm">Terms</Link>
            </div>
          </div>
        </div>
      </footer>
    </div>
  )
}
