"use client"

import type React from "react"

import { useState, useEffect } from "react"
import Link from "next/link"
import Image from "next/image"
import { motion, useScroll, useTransform, useSpring, AnimatePresence } from "framer-motion"
import { CheckIcon, ChevronRightIcon, Building2, Sparkles, Zap, Target, Users, ArrowRight, Star, TrendingUp, Brain, Shield, Rocket, Globe, MessageCircle, BarChart3, Layers, Cpu, PlayCircle, Heart, Smile, Coffee, Briefcase, Network, UserCheck, Lightbulb, Award, Compass, Megaphone, Eye, Handshake } from "lucide-react"

import { Button } from "@/components/ui/button"
import { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from "@/components/ui/card"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Badge } from "@/components/ui/badge"
import { Input } from "@/components/ui/input"
import { Accordion, AccordionContent, AccordionItem, AccordionTrigger } from "@/components/ui/accordion"
import { WaitlistRealtime } from "@/components/waitlist-realtime"

// Advanced animated components inspired by Clay
const FloatingShape = ({ children, className, delay = 0, amplitude = 10 }: { 
  children: React.ReactNode, 
  className?: string, 
  delay?: number,
  amplitude?: number 
}) => (
  <motion.div
    initial={{ y: 0, rotate: 0, scale: 1 }}
    animate={{ 
      y: [-amplitude, amplitude, -amplitude],
      rotate: [-5, 5, -5],
      scale: [1, 1.05, 1]
    }}
    transition={{ 
      duration: 6 + Math.random() * 2,
      delay,
      repeat: Infinity,
      ease: "easeInOut"
    }}
    className={className}
  >
    {children}
  </motion.div>
)

const PulsingOrb = ({ color, size = "w-4 h-4", delay = 0, className = "" }: { 
  color: string, 
  size?: string, 
  delay?: number,
  className?: string 
}) => (
  <motion.div
    initial={{ scale: 1, opacity: 0.7 }}
    animate={{ 
      scale: [1, 1.3, 1], 
      opacity: [0.7, 1, 0.7],
      rotate: [0, 180, 360]
    }}
    transition={{ duration: 3, delay, repeat: Infinity }}
    className={`${size} ${color} rounded-full ${className}`}
  />
)

// Clay-style 3D Card Component
const Clay3DCard = ({ children, className = "", hoverScale = 1.05 }: {
  children: React.ReactNode,
  className?: string,
  hoverScale?: number
}) => (
  <motion.div
    whileHover={{ 
      scale: hoverScale, 
      rotateY: 5, 
      rotateX: 5,
      z: 50
    }}
    whileTap={{ scale: 0.98 }}
    transition={{ type: "spring", stiffness: 300, damping: 20 }}
    className={`transform-gpu perspective-1000 ${className}`}
    style={{
      transformStyle: "preserve-3d"
    }}
  >
    {children}
  </motion.div>
)

// Floating Particles Background
const FloatingParticles = () => {
  const particles = Array.from({ length: 15 }, (_, i) => ({
    id: i,
    x: Math.random() * 100,
    y: Math.random() * 100,
    size: Math.random() * 8 + 4,
    color: [
      "bg-blue-400/20", "bg-purple-400/20", "bg-pink-400/20", 
      "bg-green-400/20", "bg-yellow-400/20", "bg-cyan-400/20"
    ][Math.floor(Math.random() * 6)],
    duration: Math.random() * 10 + 10
  }))

  return (
    <div className="absolute inset-0 overflow-hidden pointer-events-none">
      {particles.map((particle) => (
        <motion.div
          key={particle.id}
          className={`absolute rounded-full ${particle.color} blur-sm`}
          style={{
            left: `${particle.x}%`,
            top: `${particle.y}%`,
            width: particle.size,
            height: particle.size,
          }}
          animate={{
            y: [-20, -100, -20],
            x: [-10, 10, -10],
            opacity: [0, 1, 0],
            scale: [0.5, 1, 0.5]
          }}
          transition={{
            duration: particle.duration,
            repeat: Infinity,
            ease: "easeInOut",
            delay: Math.random() * 5
          }}
        />
      ))}
    </div>
  )
}

// Organic Blob Shape
const OrganicBlob = ({ className, color, size = "w-64 h-64" }: {
  className?: string,
  color: string,
  size?: string
}) => (
  <motion.div
    className={`${size} ${color} rounded-full blur-3xl opacity-20 ${className}`}
    animate={{
      scale: [1, 1.2, 1],
      rotate: [0, 180, 360],
      borderRadius: ["50%", "60% 40% 30% 70%", "50%"]
    }}
    transition={{
      duration: 20,
      repeat: Infinity,
      ease: "easeInOut"
    }}
  />
)

// Interactive Feature Badge
const FeatureBadge = ({ icon: Icon, label, gradient, delay = 0 }: {
  icon: any,
  label: string,
  gradient: string,
  delay?: number
}) => (
  <motion.div
    initial={{ opacity: 0, scale: 0.8, y: 20 }}
    animate={{ opacity: 1, scale: 1, y: 0 }}
    transition={{ duration: 0.6, delay }}
    whileHover={{ scale: 1.1, rotate: 5 }}
    className={`inline-flex items-center gap-2 bg-gradient-to-r ${gradient} text-white px-4 py-2 rounded-full shadow-lg cursor-pointer`}
  >
    <motion.div
      animate={{ rotate: [0, 360] }}
      transition={{ duration: 4, repeat: Infinity, ease: "linear" }}
    >
      <Icon className="w-4 h-4" />
    </motion.div>
    <span className="text-sm font-medium">{label}</span>
  </motion.div>
)

// Animated Counter
const AnimatedCounter = ({ end, duration = 2, prefix = "", suffix = "" }: {
  end: number,
  duration?: number,
  prefix?: string,
  suffix?: string
}) => {
  const [count, setCount] = useState(0)

  useEffect(() => {
    let startTime: number
    let animationFrame: number

    const animate = (timestamp: number) => {
      if (!startTime) startTime = timestamp
      const progress = Math.min((timestamp - startTime) / (duration * 1000), 1)
      
      setCount(Math.floor(progress * end))
      
      if (progress < 1) {
        animationFrame = requestAnimationFrame(animate)
      }
    }

    animationFrame = requestAnimationFrame(animate)
    return () => cancelAnimationFrame(animationFrame)
  }, [end, duration])

  return <span>{prefix}{count.toLocaleString()}{suffix}</span>
}

export default function LandingPage() {
  const [email, setEmail] = useState("")
  const [isSubmitting, setIsSubmitting] = useState(false)
  const [waitlistPosition, setWaitlistPosition] = useState<number | null>(null)
  const [mousePosition, setMousePosition] = useState({ x: 0, y: 0 })

  const { scrollYProgress } = useScroll()
  const yTransform = useTransform(scrollYProgress, [0, 1], [0, -50])
  const scaleTransform = useTransform(scrollYProgress, [0, 0.5], [1, 1.1])

  useEffect(() => {
    const handleMouseMove = (e: MouseEvent) => {
      setMousePosition({ x: e.clientX, y: e.clientY })
    }
    window.addEventListener('mousemove', handleMouseMove)
    return () => window.removeEventListener('mousemove', handleMouseMove)
  }, [])

  const handleWaitlistSubmit = async (e: React.FormEvent) => {
    e.preventDefault()
    if (!email) return

    setIsSubmitting(true)
    await new Promise((resolve) => setTimeout(resolve, 1500))
    setWaitlistPosition(Math.floor(Math.random() * 1000) + 1)
    setIsSubmitting(false)
  }

  return (
    <div className="flex flex-col min-h-screen bg-white overflow-x-hidden">
      {/* Floating Particles Background */}
      <FloatingParticles />
      
      {/* Interactive Mouse Follower */}
      <motion.div
        className="fixed w-6 h-6 bg-gradient-to-r from-blue-400 to-purple-400 rounded-full pointer-events-none z-50 mix-blend-difference"
        animate={{
          x: mousePosition.x - 12,
          y: mousePosition.y - 12,
        }}
        transition={{ type: "spring", damping: 30, stiffness: 200 }}
      />

      {/* Enhanced Navigation */}
      <motion.header 
        initial={{ y: -100 }}
        animate={{ y: 0 }}
        transition={{ duration: 0.8, ease: "easeOut" }}
        className="sticky top-0 z-40 w-full bg-white/80 backdrop-blur-2xl border-b border-gray-100/50"
      >
        <div className="container mx-auto px-4 sm:px-6 lg:px-8">
          <div className="flex h-16 items-center justify-between">
            <div className="flex items-center gap-2">
              <Link href="/" className="flex items-center space-x-3">
                <div className="relative">
                  <motion.div 
                    whileHover={{ rotate: 360, scale: 1.1 }}
                    transition={{ duration: 0.5 }}
                    className="w-10 h-10 bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 rounded-2xl flex items-center justify-center shadow-lg"
                  >
                    <Building2 className="h-5 w-5 text-white" />
                  </motion.div>
                  <PulsingOrb color="bg-green-400" size="w-3 h-3" delay={0} className="absolute -top-1 -right-1" />
                </div>
                <span className="text-xl font-bold bg-gradient-to-r from-gray-900 to-gray-600 bg-clip-text text-transparent">
                  ReferralInc
                </span>
                <motion.div
                  animate={{ rotate: [0, 10, -10, 0] }}
                  transition={{ duration: 2, repeat: Infinity }}
                >
                  <Badge className="bg-gradient-to-r from-pink-100 to-purple-100 text-purple-700 border-purple-200 text-xs px-3 py-1 shadow-sm">
                    Beta
                  </Badge>
                </motion.div>
              </Link>
            </div>

            <nav className="hidden md:flex items-center space-x-8">
              {["Features", "How it works", "Pricing"].map((item, index) => (
                <motion.div
                  key={item}
                  whileHover={{ scale: 1.05 }}
                  whileTap={{ scale: 0.95 }}
                >
                  <Link 
                    href={`#${item.toLowerCase().replace(" ", "-")}`} 
                    className="text-sm font-medium text-gray-600 hover:text-gray-900 transition-colors relative group"
                  >
                    {item}
                    <motion.div
                      className="absolute -bottom-1 left-0 w-0 h-0.5 bg-gradient-to-r from-blue-500 to-purple-500 group-hover:w-full transition-all duration-300"
                    />
                  </Link>
                </motion.div>
              ))}
            </nav>

            <div className="flex items-center gap-3">
              <Link href="/auth/login">
                <motion.div whileHover={{ scale: 1.05 }} whileTap={{ scale: 0.95 }}>
                  <Button variant="ghost" className="text-sm font-medium hover:bg-gray-100/50">
                    Log in
                  </Button>
                </motion.div>
              </Link>
              <Link href="/auth/register">
                <motion.div 
                  whileHover={{ scale: 1.05, boxShadow: "0 10px 25px rgba(0,0,0,0.1)" }} 
                  whileTap={{ scale: 0.95 }}
                >
                  <Button className="bg-gradient-to-r from-blue-600 to-purple-600 hover:from-blue-700 hover:to-purple-700 text-white text-sm px-6 py-2 rounded-full shadow-lg">
                    Get started
                  </Button>
                </motion.div>
              </Link>
            </div>
          </div>
        </div>
      </motion.header>

      <main className="flex-1">
        {/* Revolutionary Hero Section */}
        <section className="relative min-h-screen flex items-center justify-center overflow-hidden">
          {/* Dynamic Background */}
          <div className="absolute inset-0">
            {/* Organic Blobs */}
            <OrganicBlob 
              className="absolute top-20 left-10" 
              color="bg-gradient-to-br from-blue-400 to-cyan-400" 
              size="w-80 h-80"
            />
            <OrganicBlob 
              className="absolute bottom-20 right-10" 
              color="bg-gradient-to-br from-purple-400 to-pink-400" 
              size="w-96 h-96"
            />
            <OrganicBlob 
              className="absolute top-1/2 left-1/3" 
              color="bg-gradient-to-br from-green-400 to-emerald-400" 
              size="w-64 h-64"
            />

            {/* Floating Geometric Shapes */}
            <FloatingShape className="absolute top-32 right-20" delay={0} amplitude={15}>
              <div className="w-24 h-24 bg-gradient-to-br from-yellow-400 to-orange-500 rounded-3xl rotate-45 shadow-xl opacity-80" />
            </FloatingShape>
            <FloatingShape className="absolute bottom-40 left-32" delay={1} amplitude={20}>
              <div className="w-20 h-20 bg-gradient-to-br from-pink-400 to-rose-500 rounded-full shadow-xl opacity-80" />
            </FloatingShape>
            <FloatingShape className="absolute top-1/3 right-1/3" delay={2} amplitude={12}>
              <div className="w-16 h-16 bg-gradient-to-br from-cyan-400 to-blue-500 rounded-2xl shadow-xl opacity-80" />
            </FloatingShape>

            {/* Grid Pattern */}
            <div className="absolute inset-0 bg-[radial-gradient(circle_at_1px_1px,rgba(0,0,0,0.02)_1px,transparent_0)] bg-[length:50px_50px]" />
          </div>

          <div className="relative z-10 text-center max-w-7xl mx-auto px-4">
            {/* Floating Feature Badges */}
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 0.8, delay: 0.2 }}
              className="mb-12 flex flex-wrap justify-center gap-4"
            >
              <FeatureBadge icon={Brain} label="AI-Powered" gradient="from-blue-500 to-cyan-500" delay={0.3} />
              <FeatureBadge icon={Shield} label="Verified Network" gradient="from-green-500 to-emerald-500" delay={0.4} />
              <FeatureBadge icon={Zap} label="Instant Matching" gradient="from-purple-500 to-pink-500" delay={0.5} />
              <FeatureBadge icon={Award} label="Success Guaranteed" gradient="from-orange-500 to-red-500" delay={0.6} />
            </motion.div>

            {/* Main Headline */}
            <motion.h1
              initial={{ opacity: 0, y: 50, scale: 0.9 }}
              animate={{ opacity: 1, y: 0, scale: 1 }}
              transition={{ duration: 1, delay: 0.4 }}
              className="text-6xl md:text-8xl lg:text-9xl font-black tracking-tight mb-8 leading-none"
            >
              <motion.span 
                className="block bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 bg-clip-text text-transparent"
                animate={{ backgroundPosition: ["0%", "100%", "0%"] }}
                transition={{ duration: 5, repeat: Infinity }}
              >
                THE FUTURE
              </motion.span>
              <motion.span 
                className="block bg-gradient-to-r from-pink-600 via-cyan-600 to-blue-600 bg-clip-text text-transparent"
                animate={{ backgroundPosition: ["100%", "0%", "100%"] }}
                transition={{ duration: 5, repeat: Infinity }}
              >
                OF REFERRALS
              </motion.span>
              <motion.span 
                className="block text-4xl md:text-6xl lg:text-7xl text-gray-900 mt-4"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 1 }}
              >
                IS HERE
              </motion.span>
            </motion.h1>

            {/* Animated Subtitle */}
            <motion.p
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 1, delay: 0.8 }}
              className="text-xl md:text-2xl text-gray-600 mb-12 max-w-4xl mx-auto leading-relaxed"
            >
              Revolutionary AI connects top talent with dream opportunities through intelligent matching, 
              verified networks, and data-driven insights that transform careers forever.
            </motion.p>

            {/* Interactive CTA Buttons */}
            <motion.div
              initial={{ opacity: 0, y: 30 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 1, delay: 1.2 }}
              className="flex flex-col sm:flex-row gap-6 justify-center mb-16"
            >
              <Link href="/auth/register?role=candidate">
                <Clay3DCard hoverScale={1.1}>
                  <Button 
                    size="lg" 
                    className="group relative bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 hover:from-blue-700 hover:via-purple-700 hover:to-pink-700 text-white shadow-2xl px-12 py-6 text-xl font-bold rounded-2xl overflow-hidden"
                  >
                    <motion.div
                      className="absolute inset-0 bg-gradient-to-r from-cyan-500 to-pink-500 opacity-0 group-hover:opacity-100 transition-opacity duration-300"
                      animate={{ x: ["-100%", "100%"] }}
                      transition={{ duration: 3, repeat: Infinity, ease: "linear" }}
                    />
                    <div className="relative flex items-center gap-3">
                      <motion.div
                        animate={{ rotate: [0, 360] }}
                        transition={{ duration: 2, repeat: Infinity, ease: "linear" }}
                      >
                        <Rocket className="w-6 h-6" />
                      </motion.div>
                      Start Free Beta
                      <motion.div
                        animate={{ x: [0, 5, 0] }}
                        transition={{ duration: 1.5, repeat: Infinity }}
                      >
                        <ArrowRight className="w-6 h-6" />
                      </motion.div>
                    </div>
                  </Button>
                </Clay3DCard>
              </Link>
              
              <Link href="#how-it-works">
                <Clay3DCard>
                  <Button 
                    size="lg" 
                    variant="outline" 
                    className="px-12 py-6 text-xl font-bold rounded-2xl border-2 border-gray-300 text-gray-700 hover:bg-gray-50 hover:border-gray-400 transition-all duration-300 group"
                  >
                    <motion.div
                      animate={{ scale: [1, 1.2, 1] }}
                      transition={{ duration: 2, repeat: Infinity }}
                    >
                      <PlayCircle className="w-6 h-6 mr-3 group-hover:text-blue-600 transition-colors" />
                    </motion.div>
                    Watch Demo
                  </Button>
                </Clay3DCard>
              </Link>
            </motion.div>

            {/* Animated Stats */}
            <motion.div
              initial={{ opacity: 0, y: 50 }}
              animate={{ opacity: 1, y: 0 }}
              transition={{ duration: 1, delay: 1.6 }}
              className="grid grid-cols-1 md:grid-cols-3 gap-8 max-w-4xl mx-auto"
            >
              {[
                { icon: Users, number: 10000, suffix: "+", label: "Active Users", gradient: "from-blue-500 to-cyan-500" },
                { icon: Handshake, number: 5000, suffix: "+", label: "Successful Referrals", gradient: "from-green-500 to-emerald-500" },
                { icon: Building2, number: 500, suffix: "+", label: "Partner Companies", gradient: "from-purple-500 to-pink-500" }
              ].map((stat, index) => (
                <Clay3DCard key={index}>
                  <motion.div
                    whileHover={{ y: -10 }}
                    className="bg-white/80 backdrop-blur-xl border border-white/20 rounded-3xl p-8 shadow-xl text-center group"
                  >
                    <motion.div
                      className={`w-16 h-16 mx-auto mb-4 bg-gradient-to-r ${stat.gradient} rounded-2xl flex items-center justify-center shadow-lg`}
                      whileHover={{ rotate: 360 }}
                      transition={{ duration: 0.5 }}
                    >
                      <stat.icon className="w-8 h-8 text-white" />
                    </motion.div>
                    <motion.div 
                      className="text-3xl font-black text-gray-900 mb-2"
                      initial={{ opacity: 0 }}
                      whileInView={{ opacity: 1 }}
                      viewport={{ once: true }}
                    >
                      <AnimatedCounter end={stat.number} suffix={stat.suffix} />
                    </motion.div>
                    <p className="text-gray-600 font-medium">{stat.label}</p>
                  </motion.div>
                </Clay3DCard>
              ))}
            </motion.div>
          </div>

          {/* Scroll Indicator */}
          <motion.div
            initial={{ opacity: 0 }}
            animate={{ opacity: 1 }}
            transition={{ delay: 2.5 }}
            className="absolute bottom-8 left-1/2 transform -translate-x-1/2"
          >
            <motion.div
              animate={{ y: [0, 10, 0] }}
              transition={{ duration: 2, repeat: Infinity }}
              className="w-6 h-10 border-2 border-gray-400 rounded-full flex justify-center cursor-pointer"
            >
              <motion.div
                animate={{ y: [0, 16, 0] }}
                transition={{ duration: 2, repeat: Infinity }}
                className="w-1 h-3 bg-gradient-to-b from-blue-500 to-purple-500 rounded-full mt-2"
              />
            </motion.div>
          </motion.div>
        </section>

        {/* Revolutionary Features Section */}
        <section id="features" className="relative py-32 overflow-hidden">
          <div className="absolute inset-0 bg-gradient-to-b from-gray-50 via-white to-gray-50" />
          
          {/* Background Elements */}
          <div className="absolute inset-0">
            <OrganicBlob 
              className="absolute top-20 right-20" 
              color="bg-gradient-to-br from-blue-200 to-purple-200" 
              size="w-72 h-72"
            />
            <OrganicBlob 
              className="absolute bottom-20 left-20" 
              color="bg-gradient-to-br from-pink-200 to-cyan-200" 
              size="w-80 h-80"
            />
          </div>

          <div className="relative z-10 max-w-7xl mx-auto px-4">
            <motion.div
              initial={{ opacity: 0, y: 50 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 1 }}
              viewport={{ once: true }}
              className="text-center mb-20"
            >
              <motion.div
                animate={{ rotate: [0, 360] }}
                transition={{ duration: 10, repeat: Infinity, ease: "linear" }}
                className="w-20 h-20 mx-auto mb-8 bg-gradient-to-r from-blue-500 to-purple-500 rounded-3xl flex items-center justify-center shadow-xl"
              >
                <Sparkles className="w-10 h-10 text-white" />
              </motion.div>
              
              <h2 className="text-5xl md:text-7xl font-black mb-8 leading-tight">
                <span className="bg-gradient-to-r from-blue-600 via-purple-600 to-pink-600 bg-clip-text text-transparent">
                  FEATURES THAT
                </span>
                <br />
                <span className="text-gray-900">
                  BLOW MINDS
                </span>
              </h2>
              <p className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
                Revolutionary capabilities that transform how you connect, engage, and succeed in your career journey.
              </p>
            </motion.div>

            {/* Advanced Bento Grid */}
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 h-auto lg:h-[1000px]">
              
              {/* Large Feature Card - AI Brain */}
              <motion.div
                initial={{ opacity: 0, x: -50 }}
                whileInView={{ opacity: 1, x: 0 }}
                transition={{ duration: 0.8 }}
                viewport={{ once: true }}
                className="lg:col-span-2 lg:row-span-2 group relative overflow-hidden"
              >
                <Clay3DCard className="h-full">
                  <div className="h-full bg-gradient-to-br from-blue-600 via-purple-600 to-pink-600 rounded-3xl p-8 text-white relative overflow-hidden">
                    {/* Animated Background */}
                    <motion.div
                      className="absolute inset-0 bg-gradient-to-r from-cyan-500/20 to-pink-500/20"
                      animate={{ 
                        background: [
                          "linear-gradient(45deg, rgba(6, 182, 212, 0.2), rgba(236, 72, 153, 0.2))",
                          "linear-gradient(135deg, rgba(236, 72, 153, 0.2), rgba(6, 182, 212, 0.2))",
                          "linear-gradient(45deg, rgba(6, 182, 212, 0.2), rgba(236, 72, 153, 0.2))"
                        ]
                      }}
                      transition={{ duration: 5, repeat: Infinity }}
                    />

                    {/* Floating Elements */}
                    <FloatingShape className="absolute top-4 right-4" delay={0}>
                      <div className="w-12 h-12 bg-white/20 rounded-full backdrop-blur-sm" />
                    </FloatingShape>
                    <FloatingShape className="absolute bottom-8 left-8" delay={1}>
                      <div className="w-8 h-8 bg-white/20 rounded-lg rotate-45 backdrop-blur-sm" />
                    </FloatingShape>

                    <div className="relative z-10 h-full flex flex-col">
                      <div className="flex items-center mb-6">
                        <motion.div 
                          whileHover={{ rotate: 360, scale: 1.1 }}
                          transition={{ duration: 0.5 }}
                          className="w-16 h-16 bg-white/20 backdrop-blur-sm rounded-2xl flex items-center justify-center mr-4 shadow-lg"
                        >
                          <Brain className="w-8 h-8 text-white" />
                        </motion.div>
                        <div>
                          <h3 className="text-3xl font-black mb-2">AI Quantum Brain</h3>
                          <p className="text-white/80 text-lg">Next-generation intelligence</p>
                        </div>
                      </div>
                      
                      <p className="text-xl text-white/90 mb-8 leading-relaxed flex-grow">
                        Our AI doesn't just match—it understands your career DNA, predicts success patterns, 
                        and creates opportunities that don't exist yet. Experience the future of intelligent networking.
                      </p>
                      
                      {/* Interactive Visualization */}
                      <div className="relative bg-white/10 backdrop-blur-sm rounded-2xl p-6 h-64">
                        <div className="flex items-center justify-center h-full">
                          <motion.div
                            animate={{ rotate: 360 }}
                            transition={{ duration: 8, repeat: Infinity, ease: "linear" }}
                            className="relative"
                          >
                            <div className="w-24 h-24 border-2 border-white/40 rounded-full flex items-center justify-center">
                              <Cpu className="w-12 h-12 text-white" />
                            </div>
                            
                            {/* Orbiting Neural Nodes */}
                            {[0, 60, 120, 180, 240, 300].map((angle, i) => (
                              <motion.div
                                key={i}
                                className="absolute w-4 h-4 bg-white rounded-full shadow-lg"
                                style={{
                                  top: '50%',
                                  left: '50%',
                                  transformOrigin: '0 0',
                                }}
                                animate={{
                                  rotate: angle,
                                  x: 50 * Math.cos((angle * Math.PI) / 180),
                                  y: 50 * Math.sin((angle * Math.PI) / 180),
                                }}
                                transition={{ duration: 0 }}
                              />
                            ))}
                            
                            {/* Pulsing Center */}
                            <motion.div
                              className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2 w-6 h-6 bg-cyan-400 rounded-full"
                              animate={{ scale: [1, 1.5, 1], opacity: [1, 0.5, 1] }}
                              transition={{ duration: 2, repeat: Infinity }}
                            />
                          </motion.div>
                        </div>
                      </div>
                    </div>
                  </div>
                </Clay3DCard>
              </motion.div>

              {/* Feature Cards Grid */}
              {[
                {
                  icon: Shield,
                  title: "Verified Elite Network",
                  description: "Connect with authenticated professionals from Fortune 500 companies.",
                  gradient: "from-green-500 to-emerald-500",
                  bgGradient: "from-green-50 to-emerald-50",
                  delay: 0.2
                },
                {
                  icon: BarChart3,
                  title: "Success Prediction",
                  description: "AI predicts your success rate with 99.7% accuracy before you apply.",
                  gradient: "from-orange-500 to-red-500",
                  bgGradient: "from-orange-50 to-red-50",
                  delay: 0.3
                },
                {
                  icon: MessageCircle,
                  title: "Instant Insider Access",
                  description: "Get direct access to hiring managers and team leads instantly.",
                  gradient: "from-purple-500 to-pink-500",
                  bgGradient: "from-purple-50 to-pink-50",
                  delay: 0.4
                },
                {
                  icon: TrendingUp,
                  title: "Career Acceleration",
                  description: "Fast-track your career with opportunities that match your ambition.",
                  gradient: "from-cyan-500 to-blue-500",
                  bgGradient: "from-cyan-50 to-blue-50",
                  delay: 0.5
                },
                {
                  icon: Lightbulb,
                  title: "Smart Insights",
                  description: "Get personalized recommendations based on industry trends.",
                  gradient: "from-yellow-500 to-orange-500",
                  bgGradient: "from-yellow-50 to-orange-50",
                  delay: 0.6
                },
                {
                  icon: Globe,
                  title: "Global Reach",
                  description: "Access opportunities worldwide with our international network.",
                  gradient: "from-indigo-500 to-purple-500",
                  bgGradient: "from-indigo-50 to-purple-50",
                  delay: 0.7
                }
              ].map((feature, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 50 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.6, delay: feature.delay }}
                  viewport={{ once: true }}
                  className="group relative"
                >
                  <Clay3DCard>
                    <div className={`relative overflow-hidden bg-gradient-to-br ${feature.bgGradient} rounded-3xl p-6 h-full border border-white/50 shadow-lg group-hover:shadow-xl transition-all duration-300`}>
                      {/* Background Graphics */}
                      <FloatingShape className="absolute -top-2 -right-2" delay={index * 0.5}>
                        <div className={`w-8 h-8 bg-gradient-to-r ${feature.gradient} rounded-full opacity-30`} />
                      </FloatingShape>

                      <div className="relative z-10 h-full flex flex-col">
                        <motion.div 
                          whileHover={{ rotate: 360, scale: 1.1 }}
                          transition={{ duration: 0.5 }}
                          className={`w-16 h-16 mb-6 bg-gradient-to-r ${feature.gradient} rounded-2xl flex items-center justify-center shadow-lg group-hover:shadow-xl`}
                        >
                          <feature.icon className="w-8 h-8 text-white" />
                        </motion.div>
                        
                        <h3 className="text-xl font-bold text-gray-900 mb-4 group-hover:text-gray-700 transition-colors">
                          {feature.title}
                        </h3>
                        <p className="text-gray-600 leading-relaxed flex-grow">
                          {feature.description}
                        </p>

                        {/* Interactive Element */}
                        <motion.div
                          className="mt-4 flex items-center text-sm font-medium text-gray-500 group-hover:text-gray-700 cursor-pointer"
                          whileHover={{ x: 5 }}
                        >
                          Learn more
                          <ArrowRight className="w-4 h-4 ml-2" />
                        </motion.div>
                      </div>
                    </div>
                  </Clay3DCard>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* How It Works - Creative Process */}
        <section id="how-it-works" className="relative py-32 overflow-hidden">
          <div className="absolute inset-0 bg-gradient-to-b from-white via-gray-50 to-white" />
          
          {/* Background Elements */}
          <div className="absolute inset-0">
            <FloatingShape className="absolute top-20 left-10" delay={0}>
              <div className="w-32 h-32 bg-gradient-to-br from-purple-200 to-pink-200 rounded-full opacity-40 blur-xl" />
            </FloatingShape>
            <FloatingShape className="absolute bottom-20 right-10" delay={2}>
              <div className="w-24 h-24 bg-gradient-to-br from-blue-200 to-cyan-200 rounded-2xl opacity-40 blur-xl rotate-45" />
            </FloatingShape>
          </div>

          <div className="relative z-10 max-w-7xl mx-auto px-4">
            <motion.div
              initial={{ opacity: 0, y: 50 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 1 }}
              viewport={{ once: true }}
              className="text-center mb-20"
            >
              <h2 className="text-5xl md:text-7xl font-black mb-8 leading-tight">
                <span className="bg-gradient-to-r from-purple-600 to-cyan-600 bg-clip-text text-transparent">
                  THREE STEPS TO
                </span>
                <br />
                <span className="text-gray-900">
                  CAREER REVOLUTION
                </span>
              </h2>
              <p className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
                Transform your career trajectory with our revolutionary three-step process that guarantees results.
              </p>
            </motion.div>

            {/* Interactive Process Flow */}
            <div className="relative">
              {/* Connection Lines */}
              <div className="absolute top-1/2 left-0 right-0 h-px bg-gradient-to-r from-transparent via-purple-400/50 to-transparent hidden lg:block" />

              <div className="grid lg:grid-cols-3 gap-12 lg:gap-0">
                {[
                  {
                    step: "01",
                    title: "Create Your Digital Twin",
                    description: "AI analyzes your skills, experience, and career DNA to create a perfect digital representation that attracts the right opportunities.",
                    icon: Users,
                    gradient: "from-blue-500 to-cyan-500",
                    bgGradient: "from-blue-50 to-cyan-50",
                    delay: 0.2
                  },
                  {
                    step: "02", 
                    title: "AI Quantum Matching",
                    description: "Our quantum AI processes millions of data points to find your perfect career opportunities and connects you with key decision makers.",
                    icon: Cpu,
                    gradient: "from-purple-500 to-pink-500",
                    bgGradient: "from-purple-50 to-pink-50",
                    delay: 0.4
                  },
                  {
                    step: "03",
                    title: "Instant Success Network",
                    description: "Connect with verified insiders and unlock opportunities that transform your career forever with guaranteed results.",
                    icon: Zap,
                    gradient: "from-green-500 to-emerald-500",
                    bgGradient: "from-green-50 to-emerald-50",
                    delay: 0.6
                  }
                ].map((item, index) => (
                  <motion.div
                    key={index}
                    initial={{ opacity: 0, y: 100, rotateX: 45 }}
                    whileInView={{ opacity: 1, y: 0, rotateX: 0 }}
                    transition={{ duration: 0.8, delay: item.delay }}
                    viewport={{ once: true }}
                    className="relative group"
                  >
                    <Clay3DCard hoverScale={1.05}>
                      <div className={`relative bg-gradient-to-br ${item.bgGradient} rounded-3xl p-8 shadow-xl border border-white/50 group-hover:shadow-2xl transition-all duration-500 overflow-hidden`}>
                        {/* Gradient Overlay */}
                        <motion.div 
                          className={`absolute inset-0 bg-gradient-to-r ${item.gradient} opacity-0 group-hover:opacity-20 rounded-3xl transition-opacity duration-500`}
                        />
                        
                        {/* Step Number Badge */}
                        <motion.div 
                          className="absolute -top-4 -left-4 w-16 h-16 bg-gradient-to-r from-gray-900 to-gray-700 rounded-2xl flex items-center justify-center text-2xl font-black text-white shadow-2xl z-10"
                          whileHover={{ scale: 1.1, rotate: 5 }}
                        >
                          {item.step}
                        </motion.div>

                        {/* Floating Background Elements */}
                        <FloatingShape className="absolute top-4 right-4" delay={index}>
                          <div className={`w-12 h-12 bg-gradient-to-r ${item.gradient} rounded-full opacity-20`} />
                        </FloatingShape>

                        {/* Icon */}
                        <motion.div 
                          className={`w-20 h-20 mx-auto mb-6 bg-gradient-to-r ${item.gradient} rounded-3xl flex items-center justify-center shadow-xl group-hover:shadow-2xl`}
                          whileHover={{ rotate: 360, scale: 1.1 }}
                          transition={{ duration: 0.5 }}
                        >
                          <item.icon className="w-10 h-10 text-white" />
                        </motion.div>

                        {/* Content */}
                        <div className="relative z-10 text-center">
                          <h3 className="text-2xl font-bold text-gray-900 mb-4 group-hover:text-gray-700 transition-colors">
                            {item.title}
                          </h3>
                          <p className="text-gray-600 leading-relaxed mb-6">
                            {item.description}
                          </p>

                          {/* Progress Indicator */}
                          <motion.div
                            className="w-full bg-gray-200 rounded-full h-2 mb-4"
                            initial={{ opacity: 0 }}
                            whileInView={{ opacity: 1 }}
                            viewport={{ once: true }}
                          >
                            <motion.div
                              className={`h-2 bg-gradient-to-r ${item.gradient} rounded-full`}
                              initial={{ width: 0 }}
                              whileInView={{ width: "100%" }}
                              transition={{ duration: 1.5, delay: item.delay + 0.5 }}
                              viewport={{ once: true }}
                            />
                          </motion.div>

                          <motion.div
                            className="text-sm text-gray-500 font-medium"
                            initial={{ opacity: 0 }}
                            whileInView={{ opacity: 1 }}
                            transition={{ delay: item.delay + 1 }}
                            viewport={{ once: true }}
                          >
                            Step {index + 1} of 3
                          </motion.div>
                        </div>
                      </div>
                    </Clay3DCard>
                  </motion.div>
                ))}
              </div>
            </div>
          </div>
        </section>

        {/* Revolutionary Pricing */}
        <section id="pricing" className="relative py-32 overflow-hidden">
          <div className="absolute inset-0 bg-gradient-to-b from-gray-50 via-white to-gray-50" />

          {/* Background Elements */}
          <div className="absolute inset-0">
            <OrganicBlob 
              className="absolute top-20 left-20" 
              color="bg-gradient-to-br from-purple-200 to-pink-200" 
              size="w-96 h-96"
            />
            <OrganicBlob 
              className="absolute bottom-20 right-20" 
              color="bg-gradient-to-br from-blue-200 to-cyan-200" 
              size="w-80 h-80"
            />
          </div>

          <div className="relative z-10 max-w-6xl mx-auto px-4">
            <motion.div
              initial={{ opacity: 0, y: 50 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 1 }}
              viewport={{ once: true }}
              className="text-center mb-20"
            >
              <h2 className="text-5xl md:text-7xl font-black mb-8 leading-tight">
                <span className="bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent">
                  BETA ACCESS
                </span>
                <br />
                <span className="text-gray-900">
                  PRICING
                </span>
              </h2>
              <p className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
                Revolutionary pricing for revolutionary results. Start your transformation today.
              </p>
            </motion.div>

            <div className="grid md:grid-cols-2 gap-8 max-w-4xl mx-auto">
              {[
                {
                  name: "Beta Pioneer",
                  price: "FREE",
                  period: "",
                  description: "For early adopters and visionaries",
                  features: [
                    "AI-powered profile creation",
                    "Basic quantum matching",
                    "5 connections per month",
                    "Community access",
                    "Email support"
                  ],
                  gradient: "from-blue-500 to-cyan-500",
                  bgGradient: "from-blue-50 to-cyan-50",
                  popular: false,
                  cta: "Start Free Beta"
                },
                {
                  name: "Beta Elite",
                  price: "$19",
                  period: "/month",
                  description: "For career revolutionaries",
                  features: [
                    "Everything in Pioneer",
                    "Advanced AI matching",
                    "Unlimited connections",
                    "Priority support",
                    "Early feature access",
                    "Success analytics",
                    "Personal career coach"
                  ],
                  gradient: "from-purple-500 to-pink-500",
                  bgGradient: "from-purple-50 to-pink-50",
                  popular: true,
                  cta: "Upgrade to Elite"
                }
              ].map((plan, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 50, rotateY: index === 0 ? -45 : 45 }}
                  whileInView={{ opacity: 1, y: 0, rotateY: 0 }}
                  transition={{ duration: 0.8, delay: index * 0.2 }}
                  viewport={{ once: true }}
                  className="relative group"
                >
                  <Clay3DCard hoverScale={1.05}>
                    <div className={`relative overflow-hidden rounded-3xl p-8 shadow-xl border transition-all duration-500 ${
                      plan.popular 
                        ? `bg-gradient-to-br ${plan.bgGradient} border-purple-300 ring-4 ring-purple-200 group-hover:ring-purple-300` 
                        : 'bg-white border-gray-200 group-hover:border-gray-300'
                    }`}>
                      
                      {/* Popular Badge */}
                      {plan.popular && (
                        <motion.div
                          initial={{ scale: 0, rotate: -45 }}
                          animate={{ scale: 1, rotate: 0 }}
                          transition={{ duration: 0.5, delay: 0.5 }}
                          className="absolute -top-3 left-1/2 transform -translate-x-1/2 z-10"
                        >
                          <div className={`bg-gradient-to-r ${plan.gradient} text-white px-6 py-2 rounded-full text-sm font-bold shadow-lg flex items-center gap-2`}>
                            <motion.div
                              animate={{ rotate: [0, 360] }}
                              transition={{ duration: 2, repeat: Infinity }}
                            >
                              <Star className="w-4 h-4" />
                            </motion.div>
                            MOST POPULAR
                          </div>
                        </motion.div>
                      )}

                      {/* Background Graphics */}
                      <FloatingShape className="absolute -top-4 -right-4" delay={index}>
                        <div className={`w-16 h-16 bg-gradient-to-r ${plan.gradient} rounded-2xl opacity-10`} />
                      </FloatingShape>

                      <div className="relative z-10">
                        <div className="text-center mb-8">
                          <motion.div
                            className={`w-20 h-20 mx-auto mb-6 bg-gradient-to-r ${plan.gradient} rounded-3xl flex items-center justify-center shadow-xl`}
                            whileHover={{ rotate: 360, scale: 1.1 }}
                            transition={{ duration: 0.5 }}
                          >
                            <Rocket className="w-10 h-10 text-white" />
                          </motion.div>
                          
                          <h3 className="text-2xl font-bold text-gray-900 mb-2">{plan.name}</h3>
                          <p className="text-gray-600 mb-6">{plan.description}</p>
                          
                          <div className="mb-6">
                            <motion.span 
                              className="text-5xl font-black text-gray-900"
                              initial={{ scale: 0 }}
                              whileInView={{ scale: 1 }}
                              transition={{ duration: 0.5, delay: 0.3 }}
                              viewport={{ once: true }}
                            >
                              {plan.price}
                            </motion.span>
                            {plan.period && (
                              <span className="text-gray-600 text-xl ml-2">{plan.period}</span>
                            )}
                          </div>
                        </div>
                        
                        <ul className="space-y-4 mb-8">
                          {plan.features.map((feature, i) => (
                            <motion.li 
                              key={i} 
                              className="flex items-center gap-3"
                              initial={{ opacity: 0, x: -20 }}
                              whileInView={{ opacity: 1, x: 0 }}
                              transition={{ duration: 0.5, delay: 0.1 * i }}
                              viewport={{ once: true }}
                            >
                              <motion.div 
                                className={`w-6 h-6 bg-gradient-to-r ${plan.gradient} rounded-full flex items-center justify-center flex-shrink-0 shadow-lg`}
                                whileHover={{ scale: 1.2, rotate: 360 }}
                                transition={{ duration: 0.3 }}
                              >
                                <CheckIcon className="w-4 h-4 text-white" />
                              </motion.div>
                              <span className="text-gray-700 font-medium">{feature}</span>
                            </motion.li>
                          ))}
                        </ul>
                        
                        <Clay3DCard>
                          <Button
                            className={`w-full py-4 text-lg font-bold rounded-2xl transition-all duration-300 shadow-xl ${
                              plan.popular 
                                ? `bg-gradient-to-r ${plan.gradient} hover:shadow-2xl text-white` 
                                : 'bg-gray-900 hover:bg-gray-800 text-white hover:shadow-2xl'
                            }`}
                          >
                            {plan.cta}
                          </Button>
                        </Clay3DCard>
                      </div>
                    </div>
                  </Clay3DCard>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Success Stories */}
        <section className="relative py-32 overflow-hidden">
          <div className="absolute inset-0 bg-gradient-to-b from-white via-gray-50 to-white" />
          
          <div className="relative z-10 max-w-7xl mx-auto px-4">
            <motion.div
              initial={{ opacity: 0, y: 50 }}
              whileInView={{ opacity: 1, y: 0 }}
              transition={{ duration: 1 }}
              viewport={{ once: true }}
              className="text-center mb-20"
            >
              <h2 className="text-5xl md:text-7xl font-black mb-8 leading-tight">
                <span className="bg-gradient-to-r from-green-600 to-blue-600 bg-clip-text text-transparent">
                  SUCCESS
                </span>
                <br />
                <span className="text-gray-900">
                  STORIES
                </span>
              </h2>
              <p className="text-xl text-gray-600 max-w-3xl mx-auto leading-relaxed">
                Real transformations from real people who dared to revolutionize their careers.
              </p>
            </motion.div>

            <div className="grid md:grid-cols-3 gap-8">
              {[
                {
                  metric: "300%",
                  label: "Salary Increase",
                  description: "Average salary boost for our beta users",
                  icon: TrendingUp,
                  gradient: "from-green-500 to-emerald-500"
                },
                {
                  metric: "2.5x",
                  label: "Faster Hiring",
                  description: "Reduced time to get hired compared to traditional methods",
                  icon: Zap,
                  gradient: "from-blue-500 to-cyan-500"
                },
                {
                  metric: "95%",
                  label: "Success Rate",
                  description: "Users who get their dream job within 30 days",
                  icon: Target,
                  gradient: "from-purple-500 to-pink-500"
                }
              ].map((stat, index) => (
                <motion.div
                  key={index}
                  initial={{ opacity: 0, y: 50 }}
                  whileInView={{ opacity: 1, y: 0 }}
                  transition={{ duration: 0.8, delay: index * 0.2 }}
                  viewport={{ once: true }}
                  className="group"
                >
                  <Clay3DCard>
                    <div className="bg-white rounded-3xl p-8 shadow-xl border border-gray-100 text-center group-hover:shadow-2xl transition-all duration-500">
                      <motion.div
                        className={`w-20 h-20 mx-auto mb-6 bg-gradient-to-r ${stat.gradient} rounded-3xl flex items-center justify-center shadow-lg`}
                        whileHover={{ rotate: 360, scale: 1.1 }}
                        transition={{ duration: 0.5 }}
                      >
                        <stat.icon className="w-10 h-10 text-white" />
                      </motion.div>
                      
                      <motion.div 
                        className="text-5xl font-black text-gray-900 mb-4"
                        initial={{ scale: 0 }}
                        whileInView={{ scale: 1 }}
                        transition={{ duration: 0.5, delay: 0.3 }}
                        viewport={{ once: true }}
                      >
                        {stat.metric}
                      </motion.div>
                      
                      <h3 className="text-xl font-bold text-gray-900 mb-3">{stat.label}</h3>
                      <p className="text-gray-600 leading-relaxed">{stat.description}</p>
                    </div>
                  </Clay3DCard>
                </motion.div>
              ))}
            </div>
          </div>
        </section>

        {/* Epic Waitlist CTA */}
        <section className="relative py-32 overflow-hidden">
          <div className="absolute inset-0 bg-gradient-to-br from-blue-600 via-purple-600 to-pink-600" />
          
          {/* Background Graphics */}
          <div className="absolute inset-0">
            <FloatingShape className="absolute top-10 left-10" delay={0}>
              <div className="w-32 h-32 bg-white/10 rounded-full backdrop-blur-sm" />
            </FloatingShape>
            <FloatingShape className="absolute bottom-10 right-10" delay={1}>
              <div className="w-24 h-24 bg-white/10 rounded-2xl rotate-45 backdrop-blur-sm" />
            </FloatingShape>
            <FloatingShape className="absolute top-1/2 left-1/4" delay={2}>
              <div className="w-16 h-16 bg-white/10 rounded-lg backdrop-blur-sm" />
            </FloatingShape>
          </div>
          
          <div className="relative z-10 max-w-5xl mx-auto px-4">
            <motion.div
              initial={{ opacity: 0, scale: 0.8 }}
              whileInView={{ opacity: 1, scale: 1 }}
              transition={{ duration: 1 }}
              viewport={{ once: true }}
              className="text-center text-white"
            >
              <motion.div
                animate={{ rotate: [0, 360] }}
                transition={{ duration: 8, repeat: Infinity, ease: "linear" }}
                className="w-24 h-24 mx-auto mb-8 bg-white/20 backdrop-blur-sm rounded-3xl flex items-center justify-center shadow-2xl"
              >
                <Sparkles className="w-12 h-12 text-white" />
              </motion.div>
              
              <h2 className="text-5xl md:text-7xl font-black mb-6 leading-tight">
                <motion.span 
                  className="bg-gradient-to-r from-white to-cyan-200 bg-clip-text text-transparent"
                  animate={{ backgroundPosition: ["0%", "100%", "0%"] }}
                  transition={{ duration: 3, repeat: Infinity }}
                >
                  JOIN THE REVOLUTION
                </motion.span>
              </h2>
              
              <p className="text-xl text-white/90 mb-12 max-w-3xl mx-auto leading-relaxed">
                Be among the first to experience the future of AI-powered referrals. 
                Limited beta spots available for visionaries only.
              </p>

              {!waitlistPosition ? (
                <div className="max-w-md mx-auto">
                  <form onSubmit={handleWaitlistSubmit} className="space-y-6">
                    <motion.div
                      whileFocus={{ scale: 1.02 }}
                      className="relative"
                    >
                      <Input
                        type="email"
                        placeholder="Enter your email to join the revolution"
                        value={email}
                        onChange={(e) => setEmail(e.target.value)}
                        className="h-16 text-center text-lg bg-white/20 backdrop-blur-xl border-white/30 text-white placeholder-white/70 rounded-2xl shadow-xl"
                        required
                      />
                      <motion.div
                        className="absolute inset-0 bg-gradient-to-r from-cyan-500/20 to-pink-500/20 rounded-2xl opacity-0 group-focus-within:opacity-100 transition-opacity pointer-events-none"
                      />
                    </motion.div>
                    
                    <Clay3DCard>
                      <Button
                        type="submit"
                        size="lg"
                        disabled={isSubmitting}
                        className="w-full bg-white text-purple-600 hover:bg-gray-100 h-16 text-xl font-bold rounded-2xl transition-all duration-300 shadow-2xl group"
                      >
                        {isSubmitting ? (
                          <div className="flex items-center gap-3">
                            <motion.div
                              animate={{ rotate: 360 }}
                              transition={{ duration: 1, repeat: Infinity, ease: "linear" }}
                              className="w-6 h-6 border-2 border-purple-600 border-t-transparent rounded-full"
                            />
                            Joining Revolution...
                          </div>
                        ) : (
                          <div className="flex items-center gap-3">
                            <motion.div
                              animate={{ rotate: [0, 360] }}
                              transition={{ duration: 2, repeat: Infinity }}
                            >
                              <Rocket className="w-6 h-6" />
                            </motion.div>
                            Join Beta Revolution
                            <motion.div
                              animate={{ x: [0, 5, 0] }}
                              transition={{ duration: 1.5, repeat: Infinity }}
                            >
                              <ArrowRight className="w-6 h-6" />
                            </motion.div>
                          </div>
                        )}
                      </Button>
                    </Clay3DCard>
                  </form>
                  
                  <motion.p 
                    className="text-sm text-white/70 mt-6"
                    initial={{ opacity: 0 }}
                    animate={{ opacity: 1 }}
                    transition={{ delay: 1 }}
                  >
                    🚀 No credit card required • ⚡ Instant access • 🎯 Limited spots
                  </motion.p>
                </div>
              ) : (
                <motion.div
                  initial={{ opacity: 0, scale: 0.8 }}
                  animate={{ opacity: 1, scale: 1 }}
                  transition={{ duration: 0.8 }}
                >
                  <WaitlistRealtime userPosition={waitlistPosition} />
                </motion.div>
              )}
            </motion.div>
          </div>
        </section>
      </main>

      {/* Enhanced Footer */}
      <footer className="relative py-20 overflow-hidden bg-gray-900 text-white">
        <div className="absolute inset-0 bg-gradient-to-b from-gray-900 to-black" />
        
        <div className="relative z-10 max-w-6xl mx-auto px-4">
          <div className="grid grid-cols-2 md:grid-cols-4 gap-8 mb-12">
            <div className="col-span-2">
              <div className="flex items-center gap-3 mb-6">
                <motion.div 
                  whileHover={{ rotate: 360, scale: 1.1 }}
                  transition={{ duration: 0.5 }}
                  className="w-12 h-12 bg-gradient-to-r from-blue-500 via-purple-500 to-pink-500 rounded-xl flex items-center justify-center shadow-lg"
                >
                  <Building2 className="h-6 w-6 text-white" />
                </motion.div>
                <div>
                  <span className="text-2xl font-bold text-white">ReferralInc</span>
                  <motion.div
                    animate={{ rotate: [0, 10, -10, 0] }}
                    transition={{ duration: 2, repeat: Infinity }}
                    className="inline-block ml-3"
                  >
                    <Badge className="bg-gradient-to-r from-cyan-500 to-purple-500 text-white border-none text-xs px-2 py-1">
                      BETA
                    </Badge>
                  </motion.div>
                </div>
              </div>
              <p className="text-white/70 mb-6 max-w-md leading-relaxed">
                Revolutionizing the future of hiring through AI-powered referrals. 
                Connecting talent with opportunity in ways never before possible.
              </p>
              <div className="flex gap-4">
                {[
                  { icon: "𝕏", hover: "hover:bg-blue-500" },
                  { icon: "in", hover: "hover:bg-blue-600" },
                  { icon: "f", hover: "hover:bg-blue-700" }
                ].map((social, index) => (
                  <motion.div
                    key={index}
                    whileHover={{ scale: 1.1, y: -2 }}
                    className={`w-12 h-12 bg-white/10 backdrop-blur-xl border border-white/20 rounded-xl flex items-center justify-center ${social.hover} transition-all duration-300 cursor-pointer`}
                  >
                    <span className="text-white font-bold">{social.icon}</span>
                  </motion.div>
                ))}
              </div>
            </div>
            
            {[
              {
                title: "Product",
                links: ["Features", "Pricing", "Beta Program", "API"]
              },
              {
                title: "Company", 
                links: ["About", "Blog", "Careers", "Press"]
              }
            ].map((section, index) => (
              <div key={index}>
                <h3 className="font-bold text-white mb-4">{section.title}</h3>
                <ul className="space-y-3">
                  {section.links.map((link, i) => (
                    <motion.li key={i} whileHover={{ x: 5 }}>
                      <Link href="#" className="text-white/70 hover:text-cyan-400 transition-colors">
                        {link}
                      </Link>
                    </motion.li>
                  ))}
                </ul>
              </div>
            ))}
          </div>
          
          <div className="border-t border-white/10 pt-8 flex flex-col md:flex-row justify-between items-center">
            <p className="text-white/70">© 2024 ReferralInc. Revolutionizing the future.</p>
            <div className="flex gap-6 mt-4 md:mt-0">
              <Link href="#" className="text-white/70 hover:text-cyan-400 transition-colors text-sm">Privacy</Link>
              <Link href="#" className="text-white/70 hover:text-cyan-400 transition-colors text-sm">Terms</Link>
            </div>
          </div>
        </div>
      </footer>
    </div>
  )
}
